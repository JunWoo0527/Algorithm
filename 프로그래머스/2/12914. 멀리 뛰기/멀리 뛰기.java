class Solution {
    public long solution(int n) {
        // n이 증가함에 따라 도달방법의 가지수에 관계를 확인해보면
        // n=1 -> (1)
        // n=2 -> (1,1), (2)
        // n=3 -> (1,1,1), (1,2), (2,1)
        // n=4 -> 예시확인
        // n=5 -> (1,1,1,1,1),(2,1,1,1), (1,2,1,1), (1,1,2,1), (1,1,1,2),
        //      (2,2,1), (2,1,2), (1,2,2)
        
        // 정리하면 1,2,3,5,8, ... 식으로 
        // F(n) = F(n-1) + F(n-2) 가 성립하며 1로만 이동하는 반복연산이 많이시행됨을 알수가있다.
        // 이를통해 DP알고리즘을 활용하여 문제를 풀면
        
        int[] answer = new int[n+1];
        answer[0] = 1;
        answer[1] = 2;
        
        for (int i = 2; i < n; i++) {
            answer[i] = (answer[i-1] + answer[i-2]) % 1234567;
        }
        
        return answer[n-1];
    }
}